---
name: Tests

on:
  - push
  - pull_request

jobs:
  android:
    name: Android
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        api-level: [35]
        rn-version: ["0.78", "0.77", "0.76", "0.75", "0.74", "0.73"]
        arch: ["new", "old"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      # Remove once setup-node supports corepack https://github.com/actions/setup-node/pull/901 lands
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          cache: pnpm

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3
        with:
          add-job-summary: never
          # TODO: Remove this after we merge
          cache-read-only: ${{ github.ref != 'refs/heads/master' && github.ref != 'refs/heads/per-package-copy' }}

      - name: AVD Deps
        run: |
          sudo apt update
          sudo apt-get install -y libpulse0 libgl1

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | \
            sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          arch: x86_64
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Created cachable AVD"

      - name: Build
        run: |
          pnpm install

      - name: Set up RN version
        run: |
          cd packages/icon-explorer

          ./set-rn-version.sh ${{ matrix.arch }} ${{ matrix.rn-version }}

      - name: Build App
        run: |
          cd packages/icon-explorer
          mv .owl/baseline-${{ matrix.arch }} .owl/baseline
          pnpm run test:android:build

      - name: Run test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          arch: x86_64
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: adb shell settings put secure immersive_mode_confirmations confirmed && cd packages/icon-explorer && pnpm run test:android:run

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.arch }}-${{ matrix.rn-version }}-android
          path: packages/icon-explorer/.owl
          include-hidden-files: true

      - uses: dorny/test-reporter@v1
        if: always()
        with:
          name: JEST Tests android - ${{ matrix.arch }} ${{ matrix.rn-version }}
          path: packages/icon-explorer/.owl/report/*.xml
          reporter: jest-junit

  ios:
    name: iOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        rn-version: ["0.78", "0.77", "0.76", "0.75", "0.74", "0.73"]
        arch: ["new", "old"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      # Remove once setup-node supports corepack https://github.com/actions/setup-node/pull/901 lands
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          cache: pnpm

      - name: Build
        run: |
          pnpm install

      - name: Set up RN version
        run: |
          cd packages/icon-explorer

          ./set-rn-version.sh ${{ matrix.arch }} ${{ matrix.rn-version }}

      - name: Build App
        run: |
          cd packages/icon-explorer

          # Try and work around strange build bug
          mkdir -p /Users/runner/work/react-native-vector-icons/react-native-vector-icons/packages/icon-explorer/ios/build/Build/Products/Debug-iphonesimulator/ReactTestApp.app
          mkdir -p /Users/runner/work/react-native-vector-icons/react-native-vector-icons/packages/icon-explorer/ios/build/Build/Products/Release-iphonesimulator/ReactTestApp.app

          mv .owl/baseline-${{ matrix.arch }} .owl/baseline
          pnpm run test:ios:build

      - name: Run simulator
        id: simulator
        uses: futureware-tech/simulator-action@v3
        with:
          os: "iOS"
          os_version: "=18.2"
          model: "iPhone 16"

      - name: Run tests
        timeout-minutes: 5
        run: |
          cd packages/icon-explorer
          tmp=$(mktemp)
          jq '.ios.device = "${{ steps.simulator.outputs.udid }}"' owl.config.json > "$tmp" && mv "$tmp" owl.config.json
          pnpm run test:ios:run

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.arch }}-${{ matrix.rn-version }}-ios
          path: packages/icon-explorer/.owl
          include-hidden-files: true

      - uses: dorny/test-reporter@v1
        if: always()
        with:
          name: JEST Tests ios - ${{ matrix.arch }} ${{ matrix.rn-version }}
          path: packages/icon-explorer/.owl/report/*.xml
          reporter: jest-junit
